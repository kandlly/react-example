# spring.dbProductService.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url= jdbc:mysql://localhost:3306/testdb?useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=JST
# spring.datasource.url= jdbc:mysql://35.189.130.189/testdb?useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=JST
spring.datasource.username= root
spring.datasource.password= 1234

spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto= update

#jdbc:mysql:///<DATABASE_NAME>?cloudSqlInstance=<INSTANCE_CONNECTION_NAME>
# &socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=<MYSQL_USER_NAME>
# &password=<MYSQL_USER_PASSWORD>

#jdbc:mysql://google/<DATABASE-NAME>?cloudSqlInstance = <GOOGLE_CLOUD_SQL_INSTANCE_NAME>
# &socketFactory = com.google.cloud.sql.mysql.SocketFactory&user = <USERNAME>&password = <PASSWORD>

#spring.dbProductService.driverClassName = com.mysql.jdbc.Driver
#spring.dbProductService.url = jdbc:mysql://google/testdb?cloudSqlInstance = springboot-123:asia-northeast1:sakura&socketFactory = com.google.cloud.sql.mysql.SocketFactory&user =  rootspring.dbProductService.username&password = rootspring.dbProductService.password
#spring.dbProductService.name = root
#spring.dbProductService.password = 1234
#spring.dbProductService.testOnBorrow = true
#spring.dbProductService.testWhileIdle = true
#spring.dbProductService.timeBetweenEvictionRunsMillis = 60000
#spring.dbProductService.minEvictableIdleTimeMillis = 30000
#spring.dbProductService.validationQuery = SELECT 1
#spring.dbProductService.max-active = 15
#spring.dbProductService.max-idle = 10
#spring.dbProductService.max-wait = 8000

#spring.datasource.url = jdbc:mysql://35.189.130.189/testdb?cloudSqlInstance = springboot-123:asia-northeast1:sakura&socketFactory = com.google.cloud.sql.mysql.SocketFactory&user =  rootspring.datasource.username&password = rootspring.datasource.password
#spring.datasource.username= root
#spring.datasource.password= 1234

#spring.dbProductService.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.url= jdbc:mysql://35.189.130.189:3306/springboot-123:asia-northeast1:sakura?useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=JST
#spring.datasource.username= root
#spring.datasource.password= 1234

# -------------------------------com.mysql.jdbc.GoogleDriver
#spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
## spring.datasource.driverClassName = com.mysql.jdbc.GoogleDriver
#spring.cloud.gcp.sql.instance-connection-name=springboot-123:asia-northeast1:sakura
#spring.cloud.gcp.sql.database-name=testdb
#spring.datasource.username=master
#spring.datasource.password=1234
## So app starts despite "table already exists" errors.
#spring.datasource.continue-on-error=true
## Enforces database initialization
#spring.datasource.initialization-mode=always
